{"version":3,"sources":["item-detail-edit.component.ts"],"names":["core_1","require","router_1","item_1","item_service_1","ItemDetailEditComponent","itemService","router","activatedRoute","this","prototype","ngOnInit","_this","id","snapshot","params","get","subscribe","item","console","log","Item","navigate","onInsert","add","data","Id","error","onUpdate","update","onDelete","delete","onBack","onItemDetailView","__decorate","Component","selector","template","ItemService","Router","ActivatedRoute","exports"],"mappings":"8pBAAA,IAAAA,QAAAC,QAAA,iBACAC,SAAAD,QAAA,mBACAE,OAAAF,QAAA,UACAG,eAAAH,QAAA,kBA8DaI,wBAAuB,WAGhC,QAAAA,yBAAoBC,YACRC,OACAC,gBAFQC,KAAAH,YAAAA,YACRG,KAAAF,OAAAA,OACAE,KAAAD,eAAAA,eA4DhB,MAzDIH,yBAAAK,UAAAC,SAAA,WAAA,GAAAC,OAAAH,KACQI,IAAMJ,KAAKD,eAAeM,SAASC,OAAW,EAC9CF,IACAJ,KAAKH,YAAYU,IAAIH,IAAII,UACrB,SAAAC,MAAQ,MAAAN,OAAKM,KAAOA,OAGZ,IAAPL,IACLM,QAAQC,IAAI,iCACZX,KAAKS,KAAO,GAAIf,QAAAkB,KAAK,EAAG,WAAY,QAGpCF,QAAQC,IAAI,uCACZX,KAAKF,OAAOe,UAAU,OAI9BjB,wBAAAK,UAAAa,SAAA,SAASL,MAAT,GAAAN,OAAAH,IACIA,MAAKH,YAAYkB,IAAIN,MAAMD,UACvB,SAACQ,MACGb,MAAKM,KAAOO,KACZN,QAAQC,IAAI,QAAUR,MAAKM,KAAKQ,GAAK,oBACrCd,MAAKL,OAAOe,UAAU,MAE1B,SAACK,OAAU,MAAAR,SAAQC,IAAIO,UAI/BtB,wBAAAK,UAAAkB,SAAA,SAASV,MAAT,GAAAN,OAAAH,IACIA,MAAKH,YAAYuB,OAAOX,MAAMD,UAC1B,SAACQ,MACGb,MAAKM,KAAOO,KACZN,QAAQC,IAAI,QAAUR,MAAKM,KAAKQ,GAAK,sBACrCd,MAAKL,OAAOe,UAAU,YAAaV,MAAKM,KAAKQ,MAEjD,SAACC,OAAU,MAAAR,SAAQC,IAAIO,UAI/BtB,wBAAAK,UAAAoB,SAAA,SAASZ,MAAT,GAAAN,OAAAH,KACQI,GAAKK,KAAKQ,EACdjB,MAAKH,YAAYyB,OAAOlB,IAAII,UACxB,SAACQ,MACGN,QAAQC,IAAI,QAAUP,GAAK,sBAC3BD,MAAKL,OAAOe,UAAU,MAE1B,SAACK,OAAU,MAAAR,SAAQC,IAAIO,UAI/BtB,wBAAAK,UAAAsB,OAAA,WACIvB,KAAKF,OAAOe,UAAU,MAG1BjB,wBAAAK,UAAAuB,iBAAA,SAAiBf,MACbT,KAAKF,OAAOe,UAAU,YAAaJ,KAAKQ,MAEhDrB,0BAjEaA,yBAAuB6B,YA5DnClC,OAAAmC,WACGC,SAAU,mBACVC,SAAU,2+GA6DuBjC,eAAAkC,YACbpC,SAAAqC,OACQrC,SAAAsC,kBALnBnC,yBAAAoC,QAAApC,wBAAAA","file":"item-detail-edit.component.js","sourcesContent":["import {Component, OnInit} from \"@angular/core\";\r\nimport {Router, ActivatedRoute} from \"@angular/router\";\r\nimport {Item} from \"./item\";\r\nimport {ItemService} from \"./item.service\";\r\n\r\n@Component({\r\n    selector: \"item-detail-edit\",\r\n    template: `\r\n        <div *ngIf=\"item\">\r\n            <h2>\r\n                <a href=\"#\" (click)=\"onBack()\">&laquo; Back to home</a>\r\n            </h2>\r\n            <div class=\"item-container\">\r\n                <ul class=\"nav nav-tabs\">\r\n                    <li role=\"presentation\" class=\"active\">\r\n                        <a href=\"#\">Edit</a>\r\n                    </li>\r\n                    <li role=\"presentation\" *ngIf=\"item.Id !=0\">\r\n                        <a href=\"#\" (click)=\"onItemDetailView(item)\">View</a>\r\n                    </li>\r\n                </ul>\r\n                <div class=\"panel panel-default\">\r\n                    <div class=\"panel-body\">\r\n                        <form class=\"item-detail-edit\">\r\n                            <h3>\r\n                                {{item.Title}}\r\n                                <span class=\"empty-field\" [hidden]=\"dTitle.valid\">\r\n                                    Empty Title\r\n                                </span>                            \r\n                            </h3>\r\n                            <div class=\"form-group has-feedback\" [ngClass]=\"{'has-success': dTitle.valid, 'has-error':!dTitle.valid}\">\r\n                                <label>Title</label>\r\n                                <input name=\"input-title\" id=\"item-title\" type=\"text\" class=\"form-control\" [(ngModel)]=\"item.Title\" placeholder=\"Title\" required #dTitle=\"ngModel\"/>\r\n                                <span class=\"glyphicon form-control-feedback\" aria-hidden=\"true\" [ngClass]=\"{'glyphicon-ok': dTitle.valid, 'glyphicon-remove': !dTitle.valid}\"></span>\r\n                                <div [hidden]=\"dTitle.valid\" class=\"alert alert-danger\">\r\n                                    <p>You need to enter a valid title</p>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label>Description</label>\r\n                                <textarea id=\"item-description\" name=\"input-description\" type=\"text\" class=\"form-control\" [(ngModel)]=\"item.Description\" required placeholder=\"Description...\">\r\n                                </textarea>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label>Text</label>\r\n                                <textarea id=\"item-text\" name=\"input-text\" type=\"text\" class=\"form-control\" [(ngModel)]=\"item.Text\" placeholder=\"Title\">\r\n                                </textarea>\r\n                            </div>\r\n                            <div *ngIf=\"item.Id==0\" class=\"commands insert\">\r\n                                <input type=\"button\" class=\"btn btn-primry\" value=\"Save\" (click)=\"onInsert(item)\"/>\r\n                                <input type=\"button\" class=\"btn btn-default\" value=\"Cancel\" (click)=\"onBack()\"/>\r\n                            </div>\r\n                            <div *ngIf=\"item.Id!=0\" class=\"commands update\">\r\n                                <input type=\"button\" class=\"btn btn-primary\" value=\"update\" (click)=\"onUpdate(item)\"/>\r\n                                <input type=\"button\" class=\"btn btn-danger\" value=\"delete\" (click)=\"onDelete(item)\"/>\r\n                                <input type=\"button\" class=\"btn btn-default\" value=\"back\" (click)=\"onBack()\"/>\r\n                            </div>                            \r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `\r\n})\r\n\r\nexport class ItemDetailEditComponent {\r\n    item: Item;\r\n\r\n    constructor(private itemService: ItemService,\r\n        private router: Router,\r\n        private activatedRoute: ActivatedRoute) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        var id = +this.activatedRoute.snapshot.params[\"id\"];\r\n        if (id) {\r\n            this.itemService.get(id).subscribe(\r\n                item => this.item = item\r\n            );\r\n        }\r\n        else if (id === 0) {\r\n            console.log(\"id is 0: adding a new item...\");\r\n            this.item = new Item(0, \"New Item\", null);\r\n        }\r\n        else {\r\n            console.log(\"Invalid id: routing back to home...\");\r\n            this.router.navigate([\"\"]);\r\n        }\r\n    }\r\n\r\n    onInsert(item: Item) {\r\n        this.itemService.add(item).subscribe(\r\n            (data) => {\r\n                this.item = data;\r\n                console.log(\"Item \" + this.item.Id + \" has been added.\");\r\n                this.router.navigate([\"\"]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n    }\r\n\r\n    onUpdate(item: Item) {\r\n        this.itemService.update(item).subscribe(\r\n            (data) => {\r\n                this.item = data;\r\n                console.log(\"Item \" + this.item.Id + \" has been updated.\");\r\n                this.router.navigate([\"item/view\", this.item.Id]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n    }\r\n\r\n    onDelete(item: Item) {\r\n        var id = item.Id;\r\n        this.itemService.delete(id).subscribe(\r\n            (data) => {\r\n                console.log(\"Item \" + id + \" has been deleted.\");\r\n                this.router.navigate([\"\"]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n    }\r\n\r\n    onBack() {\r\n        this.router.navigate([\"\"]);\r\n    }\r\n\r\n    onItemDetailView(item: Item) {\r\n        this.router.navigate([\"item/view\", item.Id]);\r\n    }\r\n}\r\n"]}