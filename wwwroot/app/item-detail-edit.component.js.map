{"version":3,"sources":["item-detail-edit.component.ts"],"names":["core_1","require","router_1","item_1","item_service_1","ItemDetailEditComponent","itemService","router","activatedRoute","this","prototype","ngOnInit","_this","id","snapshot","params","get","subscribe","item","console","log","Item","navigate","onInsert","add","data","Id","error","onUpdate","update","onDelete","delete","onBack","onItemDetailView","__decorate","Component","selector","template","styles","ItemService","Router","ActivatedRoute","exports"],"mappings":"8pBAAA,IAAAA,QAAAC,QAAA,iBACAC,SAAAD,QAAA,mBACAE,OAAAF,QAAA,UACAG,eAAAH,QAAA,kBAuGaI,wBAAuB,WAGhC,QAAAA,yBAAoBC,YACRC,OACAC,gBAFQC,KAAAH,YAAAA,YACRG,KAAAF,OAAAA,OACAE,KAAAD,eAAAA,eA4DhB,MAzDIH,yBAAAK,UAAAC,SAAA,WAAA,GAAAC,OAAAH,KACQI,IAAMJ,KAAKD,eAAeM,SAASC,OAAW,EAC9CF,IACAJ,KAAKH,YAAYU,IAAIH,IAAII,UACrB,SAAAC,MAAQ,MAAAN,OAAKM,KAAOA,OAGZ,IAAPL,IACLM,QAAQC,IAAI,iCACZX,KAAKS,KAAO,GAAIf,QAAAkB,KAAK,EAAG,WAAY,QAGpCF,QAAQC,IAAI,uCACZX,KAAKF,OAAOe,UAAU,OAI9BjB,wBAAAK,UAAAa,SAAA,SAASL,MAAT,GAAAN,OAAAH,IACIA,MAAKH,YAAYkB,IAAIN,MAAMD,UACvB,SAACQ,MACGb,MAAKM,KAAOO,KACZN,QAAQC,IAAI,QAAUR,MAAKM,KAAKQ,GAAK,oBACrCd,MAAKL,OAAOe,UAAU,MAE1B,SAACK,OAAU,MAAAR,SAAQC,IAAIO,UAI/BtB,wBAAAK,UAAAkB,SAAA,SAASV,MAAT,GAAAN,OAAAH,IACIA,MAAKH,YAAYuB,OAAOX,MAAMD,UAC1B,SAACQ,MACGb,MAAKM,KAAOO,KACZN,QAAQC,IAAI,QAAUR,MAAKM,KAAKQ,GAAK,sBACrCd,MAAKL,OAAOe,UAAU,YAAaV,MAAKM,KAAKQ,MAEjD,SAACC,OAAU,MAAAR,SAAQC,IAAIO,UAI/BtB,wBAAAK,UAAAoB,SAAA,SAASZ,MAAT,GAAAN,OAAAH,KACQI,GAAKK,KAAKQ,EACdjB,MAAKH,YAAYyB,OAAOlB,IAAII,UACxB,SAACQ,MACGN,QAAQC,IAAI,QAAUP,GAAK,sBAC3BD,MAAKL,OAAOe,UAAU,MAE1B,SAACK,OAAU,MAAAR,SAAQC,IAAIO,UAI/BtB,wBAAAK,UAAAsB,OAAA,WACIvB,KAAKF,OAAOe,UAAU,MAG1BjB,wBAAAK,UAAAuB,iBAAA,SAAiBf,MACbT,KAAKF,OAAOe,UAAU,YAAaJ,KAAKQ,MAEhDrB,0BAjEaA,yBAAuB6B,YArGnClC,OAAAmC,WACGC,SAAU,mBACVC,SAAU,88CA+BVC,QAAS,0lCAuEwBlC,eAAAmC,YACbrC,SAAAsC,OACQtC,SAAAuC,kBALnBpC,yBAAAqC,QAAArC,wBAAAA","file":"item-detail-edit.component.js","sourcesContent":["import {Component, OnInit} from \"@angular/core\";\nimport {Router, ActivatedRoute} from \"@angular/router\";\nimport {Item} from \"./item\";\nimport {ItemService} from \"./item.service\";\n\n@Component({\n    selector: \"item-detail-edit\",\n    template: `\n        <div *ngIf=\"item\" class=\"item-container\">\n          <div class=\"item-tab-menu\">\n            <span class=\"selected\">Edit</span>\n            <span *ngIf=\"item.Id != 0\" (click)=\"onItemDetailView(item)\">View</span>\n          </div>\n          <div class=\"item-details\">\n            <div class=\"mode\">Edit Mode</div>\n            <h2>{{item.Title}}</h2>\n                <ul>\n                    <li>\n                        <label>Title:</label>\n                        <input [(ngModel)]=\"item.Title\" placeholder=\"Insert the title...\"/>\n                    </li>\n                    <li>\n                        <label>Description:</label>\n                        <textarea [(ngModel)]=\"item.Description\" placeholder=\"Insert a suitable description...\"></textarea>\n                    </li>\n                </ul>\n                <div *ngIf=\"item.Id == 0\" class=\"commands insert\">\n                    <input type=\"button\" value=\"Save\" (click)=\"onInsert(item)\" />\n                    <input type=\"button\" value=\"Cancel\" (click)=\"onBack()\" />\n                </div>\n                <div *ngIf=\"item.Id != 0\" class=\"commands update\">\n                    <input type=\"button\" value=\"Update\" (click)=\"onUpdate(item)\" />\n                    <input type=\"button\" value=\"Delete\" (click)=\"onDelete(item)\" />\n                    <input type=\"button\" value=\"Cancel\" (click)=\"onItemDetailView(item)\" />\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [`\n.item-container {  \n    width: 600px;\n}\n\n.item-tab-menu {\n    margin-right: 30px;\n}\n\n.item-tab-menu span {\n    background-color: #dddddd;\n    border: 1px solid #666666;\n    border-bottom: 0;\n    cursor: pointer;\n    display: block;\n    float: right;\n    margin: 0 0 -1px 5px;\n    padding: 5px 10px 4px 10px;\n    text-align: center;\n    width: 60px;\n}\n\n.item-tab-menu span.selected {\n    background-color: #eeeeee;\n    cursor: auto;\n    font-weight: bold;\n    padding-bottom: 5px;\n}\n\n.item-details {\n    background-color: #eeeeee;\n    border: 1px solid black;\n    clear: both;\n    margin: 0;\n    padding: 5px 10px;\n}\n\n.item-details * {\n    vertical-align: middle;\n}\n\n.item-details .mode {\n    font-size: 0.8em;\n    color: #777777;\n}\n\n.item-details ul li {\n    padding: 5px 0;\n}\n\n.item-details input[type=\"text\"] {\n    display: block;\n    width: 100%;\n}\n\n.item-details textarea {\n    display: block;\n    width: 100%;\n    height: 60px;\n}\n\n.commands {\n    text-align: right;\n    margin: 10px 20px 10px 10px;\n}\n    `]\n})\n\nexport class ItemDetailEditComponent {\n    item: Item;\n\n    constructor(private itemService: ItemService,\n        private router: Router,\n        private activatedRoute: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        var id = +this.activatedRoute.snapshot.params[\"id\"];\n        if (id) {\n            this.itemService.get(id).subscribe(\n                item => this.item = item\n            );\n        }\n        else if (id === 0) {\n            console.log(\"id is 0: adding a new item...\");\n            this.item = new Item(0, \"New Item\", null);\n        }\n        else {\n            console.log(\"Invalid id: routing back to home...\");\n            this.router.navigate([\"\"]);\n        }\n    }\n\n    onInsert(item: Item) {\n        this.itemService.add(item).subscribe(\n            (data) => {\n                this.item = data;\n                console.log(\"Item \" + this.item.Id + \" has been added.\");\n                this.router.navigate([\"\"]);\n            },\n            (error) => console.log(error)\n        );\n    }\n\n    onUpdate(item: Item) {\n        this.itemService.update(item).subscribe(\n            (data) => {\n                this.item = data;\n                console.log(\"Item \" + this.item.Id + \" has been updated.\");\n                this.router.navigate([\"item/view\", this.item.Id]);\n            },\n            (error) => console.log(error)\n        );\n    }\n\n    onDelete(item: Item) {\n        var id = item.Id;\n        this.itemService.delete(id).subscribe(\n            (data) => {\n                console.log(\"Item \" + id + \" has been deleted.\");\n                this.router.navigate([\"\"]);\n            },\n            (error) => console.log(error)\n        );\n    }\n\n    onBack() {\n        this.router.navigate([\"\"]);\n    }\n\n    onItemDetailView(item: Item) {\n        this.router.navigate([\"item/view\", item.Id]);\n    }\n}\n"]}